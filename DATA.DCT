   File:             Data.dct

   Date:             November 3, 1992.
   Author:           Randall W. Charlick  
   Description:      This file contains a complete description of the variables and data structures used throughtout this project.
                     Variables are listed within source code file by function.


   Render.c
   
      Globals:
         disp_info      Structure used to store current display mode information.
         pcxPtr         Pointer to a virtual buffer for saving and retrieving PCX files in command mode.
         rootTree       Pointer to a menu tree containing the address of the first node.
         statPos        Array of x and y coordinates for positioning status display information.
         leftRegion     Structure containing two points which define the left rendering region.
         rightRegion    Structure containing two points which define the right rendering region, if one exists.
         checkRoot      Boolean for enabling the root finding checking function "Evaluate".
         saturate       Determines the angle of light saturation for an object.
         backColor      Sets the background color.
         sun            Three dimensional location of the light source.
         planeRotation  Structure containing degreees of rotation in each of the three coordinate planes.
         imageNumber    Contains the image number used for center of rotation.

      main:
         mode           Determines the running mode of the rendering package, menu, command or help mode.
         result         Retains the error number generated by called graphic functions.
         method         Contains the coded value for rendering techniques for both the left and right rendering regions.
         status         Determines whether the display status bar is enabled.
         drawMode       Sets the drawing mode to single or dual screen.
         numColor       Contains the maximum number of simultaneous colors for the current video mode.
         reduction      Holds the value of the number of video modes to "step down" as requested by the user.
         dtype          Contains the value of the video mode extracted from the requested PCX file.
         video          Contains the value of the maximum of the best displayable video mode or the requested video mode.
         leftScene      Contains the name of the image to render in the left region.
         rightScene     Contains the name of the image to render in the right region.
         restoreStr     Holds the name of the PCX file to restore.
         saveStr        Holds the name of the PCX file to save a rendering to.
         cfgStr         Contains the name of the configuration file requested by the user.
         leftImage      Contains the linked list of images to display in the left region.
         rightImage     Contains the linked list of images to display in the right region.

      Initialize:
         status         Contains the success or failure status of video mode selection.
         index          Index into the video256 array.
         skip           Determines the number of valid modes to "skip" in order to incrementally reduce resolution.
         video256       Array containing the values of all GENUS supported video modes.

      CreateMenu:
         result         Contains the result of menu function calls (success or fail).
         menuString     Contains the menu string built from reading the image.mnu file.


      GetConfig:
         filePtr        A pointer to the requested configuration file.
         buffer         Buffer for reading configuration file labels.
         temp           Hold the value of the specified label.


      GetArgs:
         i              Counter used to determine the number of user supplied arguments.
         j              Counter used to determine valid string arguments.
         value          Returns a success or error value to the main calling routine.
         strSize        Contains the value which is the length of a given argument.
         compMode       Sets the display mode flag to Dual or mono mode.
         compArgs       Determines whether both the left rendering method and the left image were requested by the user.
         reqMode        Checks for conflicting save and restore arguments.
         reqArgs        Determines whether both the right rendering method and the right image were requested by the user.
         mutEx          Variable flag indicating whether two incompatible arguments were requested by the user.
   


   Menu.c

      Global and External:
         disp_info
         rootTree


      mnDefMenu:
         branch
         newbranch
         hold
         done
         i
         found


      mnDispMenu:
         branch
         node
         parent
         i
         adjust
         tHeight
         height
         width
         spacing
         colorMode
         hBarPos
         result
         offSet
         vBarPos
         hFrom
         hTo
         vFrom
         vTo
         hold
         x1
         y1
         x2
         y2
         charCt
         maxTitle
         mainPos
         valid
         found


      mnUpdateMenu:
         branch
         node
         adjust
         found
         mainPos
         i
         width
         height
         spacing
         hBarPos
         result
         hold
         hFrom
         vBarPos
         charCt
         maxTitle


      mnClearMenu:
         parent
         branch
         node
         i
         tHeight
         height
         width
         spacing
         colorMode
         hBarPos
         mainPos
         valid
         vBarPos
         found
         hFrom
         vFrom
         hTo
         vTo
         hold


      mnMarkOpt:
         branch
         node
         i
         adjust
         height
         width
         hBarPos
         vBarPos
         x1
         y1
         x2
         y2
         hFrom
         vFrom
         hold
         state
         mainPos
         valid
         result
         found


      mnEnableOpt:
         node
         branch
         temp
         found
         hold


      mnSelectOpt:
         branch
         node
         i
         found
         hold


      mnChooseOpt:
         branch
         node
         i
         found
         hold
         uplefty
         lowrighty
         errorCond


      mnFindActive:
         active
         i


      mnReadMenu:
         fileImage
         temp
         empty


      mnEraseMenu:
         found
         active
         i


      TitleInfo:
         i


      GetMenuPos:
         parent
         i
         charCt
         maxTitle
         offspring


      ParseString:
         cdr
         menuSize
         cdrSize


      Strct:
         target
         temp
         strSize
         i
         count


      FindMenu:
         temp_node
         i



   Eval.c

      External Globals:
         rightRegion
         leftRegion
         sun
         saturate
         backColor
         imageNumber
         disp_info
         rootTree


      Globals:
         centerRotation
         vPtr
         fImage


      MenuChoice:
         leftImage
         rightImage
         branch
         leftScene
         rightScene
         fileStr
         lastLeftImage
         lastRightImage
         mType
         status
         method
         drawMode
         lastStatus
         lastSide
         depress
         quit
         menu
         option
         hold
         lastLeftMethod
         lastRightMethod
         menuOff
         flood
         side
         orSelect
         lastLeftOrient
         lastRightOrient
         clrTitle
         virtual
         seconds
         scrClear
         errorCond
         dtype
         virtClear
         begTime
         endTime
         vfree


      AssignImage:
         imageList
         imageNode
         newNode
         hold
         temp
         strSize
         i
         j
         iCount
         xSize
         ySize
         zSize


      ClearRegion:
         barHeight


      GetMouseChoice:
         result
         xPos
         yPos
         found
         pressed



   Select.c

      External Globals:
         disp_info
         rightRegion
         leftRegion
         scanOne
         scanTwo
         fibOne
         fibTwo
         fibThree
         leftVert
         rightVert
         leftStart
         rightStart


      SetRegion:
         barHeight


      Fibonacci:
         i
         answer
         first
         second
         third


      Gcd:
         i
         maxOne
         maxTwo
         min
         answer


      FatScan:
         startPos


      SelectPixel:
         done



   Display.c

      External Globals:
         disp_info
         statPos
         rightRegion
         leftRegion

      Globals:
         tv


      DisplayStatus:
         x1
         y1
         x2
         y2
         width
         height


      ClearStatus:
         height


      StatusText:
         xAdj
         yAdj
         xPos
         yPos
         cHeight
         strSize
         lx1
         ly1
         lx2
         ly2
         rx1
         ry1
         rx2
         ry2
         width
         height
         pixline
         lMargin
         rMargin
         lastX
         prevX


      ShowStatus:
         xSize
         ySize
         cHeight
         offSet
         methStr
         satStr
         regStr


      UpdateStatus:
         currTime
         offSet
         complete
         cHeight
         totSecs
         hrs
         mins
         secs
         compStr
         timStr
         tempStr


      DrawSep:
         x1
         y1
         x2
         y2


      AssignPalette:
         i
         rct
         gct
         bct
         status
         pal256


      Decode:
         vert
         type


      GetFileName:
         x1
         x2
         y1
         y2
         xPos
         yPos
         yAdj
         height
         width
         size
         mask
         tempStr


      ShowInfo:
         mins
         secs
         height
         width
         x1
         y1
         x2
         y2
         xSize
         ySize
         bSize
         xPos
         yPos
         xAdj
         yAdj
         margin
         pixline
         thruPut
         bx1
         bx2
         by1
         regStr
         satStr
         timStr
         tempStr
         numPix


      Alert:
         height
         width
         x1
         y1
         x2
         y2
         bSize
         xPos
         yPos
         bx1
         bx2
         by1
         size


      ShowTitle:
         height
         width
         x1
         y1
         x2
         y2
         xSize
         ySize
         xPos
         yPos
         yAdj
         margin
         pixline


      GetButton:
         mX
         mY
         xPos
         yPos
         found
         pressed



   Surface.c
      External Globals:
         disp_info
         rightRegion
         leftRegion
         planeRotation
         centerRotation
         checkRoot
         imageNumber


      Globals:
         scanOne
         scanTwo
         fibOne
         fibTwo
         fibThree
         leftVert
         rightVert
         leftStart
         rightStart


      Driver:
         ray
         startTime
         leftPix
         rightPix
         totPix
         leftIter
         rightIter
         leftWide
         rightWide
         count
         done
         leftDone
         rightDone
         active
         intensity
         leftX
         leftY
         rightX
         rightY
         leftMethod
         rightMethod
         leftCount
         rightCount
         leftContinue
         rightContinue
         inValid
         cancelled
         leftComp
         leftTime
         rightComp
         rightTime
         keyBrk
         mem


      Trace:
         image
         hitImage
         hitList
         newList
         startList
         lastList
         surfacePoint
         normal
         brightness
         hit


      Evaluate:
         tmp
         sum
         j
         k


      GetNormal:
         tnorm
         dx
         dy
         dz
         da
         db


      Intersect:
         tRay
         contact
         degree
         zCount
         clipped
         i
         a
         z
         h
         r
         r2
         R
         R2
         x0
         y0
         z0
         x1
         y1
         z1
         g14
         g13
         g12
         g11
         g10
         g09
         g08
         g07
         g06
         g05
         g04
         g03
         g02
         g01


      Apply:
         num
         nearest
         i
         roots
         stdErr


      Quadric:
         discriminant
         p
         q
         ds
         num
   

      Cubic:
         num
         i
         sub
         A
         B
         C
         A2
         p
         q
         p3
         discriminant
         u
         phi
         t
         v
         ds


      Quartic:
         num
         i
         aa
         bb
         cc
         dd
         c
         u
         v
         z
         a2
         p
         q
         r
         sub
         stdErr


      AssignMatrix:
         radian
         theta
   

      MatrixMultiply:
         i
         j
         k
         AnswerMat


      VectorMultiply:
         i
         j
         result
         vector
         tRay


      Rotate:
         ResultMatrix
         TransMatrix
         TempMatrix
         i
         j
         resubstitute
         previous


      Illuminate:
         intensity
         numerator
         denominator
         incidence
         theta
         sub1
         sub2


      FindImage:
         hitNode
         foundNode
         closest


      FreeList:
         startNode
         lastNode